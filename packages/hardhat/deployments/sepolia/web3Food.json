{
  "address": "0x38c3B22DF6CCC581D8E7d700766723401A43a330",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "image",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "foodId",
          "type": "uint256"
        }
      ],
      "name": "FoodAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "tableId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "FoodBought",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_image",
          "type": "string"
        }
      ],
      "name": "addFood",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tableId",
          "type": "string"
        }
      ],
      "name": "buyFood",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPrepared",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tableId",
              "type": "string"
            }
          ],
          "internalType": "struct web3Food.order[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getFood",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "image",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "foodId",
              "type": "uint256"
            }
          ],
          "internalType": "struct web3Food.food",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxFood",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "prepareOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x75eda824d6e8ecc470ba01ac4b0d3d2efc81a3b0b122e695303697136ee4f7fe",
  "receipt": {
    "to": null,
    "from": "0xE3ba04154e471Ee101D2e20B44f2392BC742A761",
    "contractAddress": "0x38c3B22DF6CCC581D8E7d700766723401A43a330",
    "transactionIndex": 51,
    "gasUsed": "1036821",
    "logsBloom": "0x
    "blockHash": "0xea123761158d38082906d6bcc7ec027c4c3ee2eb5bcd915ca200ae6fab8dad37",
    "transactionHash": "0x75eda824d6e8ecc470ba01ac4b0d3d2efc81a3b0b122e695303697136ee4f7fe",
    "logs": [],
    "blockNumber": 6614133,
    "cumulativeGasUsed": "8441002",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xfb8b972b0D1cF9BB242A40F7AEA8E9a1bF89E0E3"
  ],
  "numDeployments": 1,
  "solcInputHash": "0d1e0c30a6583634d88b515bfa610851",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"foodId\",\"type\":\"uint256\"}],\"name\":\"FoodAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tableId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"FoodBought\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"}],\"name\":\"addFood\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tableId\",\"type\":\"string\"}],\"name\":\"buyFood\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrepared\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tableId\",\"type\":\"string\"}],\"internalType\":\"struct web3Food.order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFood\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"foodId\",\"type\":\"uint256\"}],\"internalType\":\"struct web3Food.food\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFood\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"prepareOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"BuidlGuidl\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A smart contract that allows changing a state variable of the contract and tracking the changes It also allows the owner to withdraw the Ether in the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YourContract.sol\":\"web3Food\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/YourContract.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\n/**\\n * A smart contract that allows changing a state variable of the contract and tracking the changes\\n * It also allows the owner to withdraw the Ether in the contract\\n * @author BuidlGuidl\\n */\\ncontract web3Food {\\n\\n    address public owner;\\n    uint256 public maxFood = 0;\\n    uint256 public orderId = 0;\\n\\n    constructor(address _owner) {\\n        // Set the owner of the contract to the address that deployed the contract\\n        owner = _owner;\\n    }\\n\\n    event FoodAdded(string name, uint256 price, string description, string image, uint256 foodId);\\n    event FoodBought(address indexed buyer, string name, uint256 time, string tableId, uint256 orderId);\\n\\n    struct food {\\n        string name;\\n        uint256 price;\\n        string description;\\n        string image;\\n        uint256 foodId;\\n    }\\n\\n    struct order {\\n        string name;\\n        uint256 price;\\n        bool isPrepared;\\n        address buyer;\\n        string tableId;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only the owner can call this function\\\");\\n        _;\\n    }\\n\\n    food[] private foods; // Mark as private\\n    order[] private orders; // Mark as private\\n\\n    function addFood(string memory _name, uint256 _price, string memory _description, string memory _image) public {\\n        food memory newFood = food(_name, _price, _description, _image, maxFood);\\n        foods.push(newFood);\\n        emit FoodAdded(_name, _price, _description, _image, maxFood);\\n        maxFood++;\\n    }\\n\\n    function getFood(uint256 _index) public view returns (food memory) {\\n        return foods[_index];\\n    }\\n\\n    function buyFood(uint256 _index, string memory tableId) public payable {\\n        require(_index < foods.length, \\\"Invalid food index\\\");\\n        require(msg.value >= foods[_index].price, \\\"Insufficient funds\\\");\\n        require(keccak256(abi.encodePacked(tableId)) != keccak256(abi.encodePacked(\\\"\\\")), \\\"Please enter a table!\\\");\\n        order memory newOrder = order(foods[_index].name, foods[_index].price, false, msg.sender, tableId);\\n        orders.push(newOrder);\\n        emit FoodBought(msg.sender, foods[_index].name, block.timestamp, tableId, orderId);\\n        orderId++;\\n    }\\n\\n    function prepareOrder(uint256 _index) public onlyOwner {\\n        require(_index < orders.length, \\\"Invalid order index\\\");\\n        orders[_index].isPrepared = true;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        payable(owner).transfer(address(this).balance);\\n    }\\n\\n    // Function to get all orders\\n    function getAllOrders() public view returns (order[] memory) {\\n        return orders;\\n    }\\n}\",\"keccak256\":\"0xa2157b969c0553a2d4531791464a431e1cec8a52c369a908ce36307d8320b918\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526000600155600060025534801561001a57600080fd5b506040516111e13803806111e18339810160408190526100399161005e565b600080546001600160a01b0319166001600160a01b039290921691909117905561008e565b60006020828403121561007057600080fd5b81516001600160a01b038116811461008757600080fd5b9392505050565b6111448061009d6000396000f3fe6080604052600436106100865760003560e01c80633ccfd60b116100595780633ccfd60b146101235780637bea0d1c146101385780638da5cb5b1461015a578063c243fb4914610192578063dfca959f146101a857600080fd5b80630bbeb8661461008b578063163de5e5146100ad5780631e4de872146100d65780633442fafa14610103575b600080fd5b34801561009757600080fd5b506100ab6100a6366004610bba565b6101bb565b005b3480156100b957600080fd5b506100c360025481565b6040519081526020015b60405180910390f35b3480156100e257600080fd5b506100f66100f1366004610c4c565b6102c5565b6040516100cd9190610cb5565b34801561010f57600080fd5b506100ab61011e366004610c4c565b6104f4565b34801561012f57600080fd5b506100ab6105a8565b34801561014457600080fd5b5061014d61060f565b6040516100cd9190610d2e565b34801561016657600080fd5b5060005461017a906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b34801561019e57600080fd5b506100c360015481565b6100ab6101b6366004610de0565b6107c3565b6040805160a0810182528581526020810185905290810183905260608101829052600180546080830152600380549182018155600052815182916005027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019081906102279082610eb0565b5060208201516001820155604082015160028201906102469082610eb0565b506060820151600382019061025b9082610eb0565b506080820151816004015550507f95a8a800b05c316965e814cfd44fcc1c494efc73b62e45728c378fd3ac71db61858585856001546040516102a1959493929190610f70565b60405180910390a1600180549060006102b983610fc2565b91905055505050505050565b6102f76040518060a0016040528060608152602001600081526020016060815260200160608152602001600081525090565b6003828154811061030a5761030a610fe9565b90600052602060002090600502016040518060a001604052908160008201805461033390610e27565b80601f016020809104026020016040519081016040528092919081815260200182805461035f90610e27565b80156103ac5780601f10610381576101008083540402835291602001916103ac565b820191906000526020600020905b81548152906001019060200180831161038f57829003601f168201915b50505050508152602001600182015481526020016002820180546103cf90610e27565b80601f01602080910402602001604051908101604052809291908181526020018280546103fb90610e27565b80156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b5050505050815260200160038201805461046190610e27565b80601f016020809104026020016040519081016040528092919081815260200182805461048d90610e27565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b505050505081526020016004820154815250509050919050565b6000546001600160a01b031633146105275760405162461bcd60e51b815260040161051e90610fff565b60405180910390fd5b600454811061056e5760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840dee4c8cae440d2dcc8caf606b1b604482015260640161051e565b60016004828154811061058357610583610fe9565b60009182526020909120600490910201600201805460ff191691151591909117905550565b6000546001600160a01b031633146105d25760405162461bcd60e51b815260040161051e90610fff565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f1935050505015801561060c573d6000803e3d6000fd5b50565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156107ba57838290600052602060002090600402016040518060a001604052908160008201805461066690610e27565b80601f016020809104026020016040519081016040528092919081815260200182805461069290610e27565b80156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b505050918352505060018201546020820152600282015460ff81161515604083015261010090046001600160a01b0316606082015260038201805460809092019161072990610e27565b80601f016020809104026020016040519081016040528092919081815260200182805461075590610e27565b80156107a25780601f10610777576101008083540402835291602001916107a2565b820191906000526020600020905b81548152906001019060200180831161078557829003601f168201915b50505050508152505081526020019060010190610633565b50505050905090565b60035482106108095760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840ccdedec840d2dcc8caf60731b604482015260640161051e565b6003828154811061081c5761081c610fe9565b9060005260206000209060050201600101543410156108725760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b604482015260640161051e565b604080516000815260208101808352815190209161089291849101611044565b60405160208183030381529060405280519060200120036108ed5760405162461bcd60e51b8152602060048201526015602482015274506c6561736520656e7465722061207461626c652160581b604482015260640161051e565b60006040518060a001604052806003858154811061090d5761090d610fe9565b9060005260206000209060050201600001805461092990610e27565b80601f016020809104026020016040519081016040528092919081815260200182805461095590610e27565b80156109a25780601f10610977576101008083540402835291602001916109a2565b820191906000526020600020905b81548152906001019060200180831161098557829003601f168201915b50505050508152602001600385815481106109bf576109bf610fe9565b600091825260208083206001600590930201820154845283018290523360408401526060909201859052600480549283018155908190528251929350839291027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01908190610a2e9082610eb0565b5060208201516001820155604082015160028201805460608501516001600160a01b031661010002610100600160a81b0319931515939093166001600160a81b03199091161791909117905560808201516003820190610a8e9082610eb0565b505050336001600160a01b03167f4387a43b973e49ad9e029dcf0b0d3a666017065259bf6dfc80d332d8e9e46dea60038581548110610acf57610acf610fe9565b90600052602060002090600502016000014285600254604051610af59493929190611060565b60405180910390a260028054906000610b0d83610fc2565b9190505550505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b3e57600080fd5b813567ffffffffffffffff80821115610b5957610b59610b17565b604051601f8301601f19908116603f01168101908282118183101715610b8157610b81610b17565b81604052838152866020858801011115610b9a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610bd057600080fd5b843567ffffffffffffffff80821115610be857600080fd5b610bf488838901610b2d565b9550602087013594506040870135915080821115610c1157600080fd5b610c1d88838901610b2d565b93506060870135915080821115610c3357600080fd5b50610c4087828801610b2d565b91505092959194509250565b600060208284031215610c5e57600080fd5b5035919050565b60005b83811015610c80578181015183820152602001610c68565b50506000910152565b60008151808452610ca1816020860160208601610c65565b601f01601f19169290920160200192915050565b602081526000825160a06020840152610cd160c0840182610c89565b9050602084015160408401526040840151601f1980858403016060860152610cf98383610c89565b9250606086015191508085840301608086015250610d178282610c89565b915050608084015160a08401528091505092915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610dd257603f19898403018552815160a08151818652610d7b82870182610c89565b838b0151878c01528984015115158a8801526060808501516001600160a01b031690880152608093840151878203948801949094529150610dbe90508183610c89565b968901969450505090860190600101610d55565b509098975050505050505050565b60008060408385031215610df357600080fd5b82359150602083013567ffffffffffffffff811115610e1157600080fd5b610e1d85828601610b2d565b9150509250929050565b600181811c90821680610e3b57607f821691505b602082108103610e5b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610eab57600081815260208120601f850160051c81016020861015610e885750805b601f850160051c820191505b81811015610ea757828155600101610e94565b5050505b505050565b815167ffffffffffffffff811115610eca57610eca610b17565b610ede81610ed88454610e27565b84610e61565b602080601f831160018114610f135760008415610efb5750858301515b600019600386901b1c1916600185901b178555610ea7565b600085815260208120601f198616915b82811015610f4257888601518255948401946001909101908401610f23565b5085821015610f605787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60a081526000610f8360a0830188610c89565b8660208401528281036040840152610f9b8187610c89565b90508281036060840152610faf8186610c89565b9150508260808301529695505050505050565b600060018201610fe257634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b60008251611056818460208701610c65565b9190910192915050565b60808152600080865461107281610e27565b80608086015260a060018084166000811461109457600181146110ae576110df565b60ff1985168884015283151560051b8801830195506110df565b8b60005260208060002060005b868110156110d65781548b82018701529084019082016110bb565b8a018501975050505b505050505085602084015282810360408401526110fc8186610c89565b9150508260608301529594505050505056fea26469706673582212207544c3b488bce0fb750e8092c593890c4e2150eb8d902d7c62b90f65b2e38f0b64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80633ccfd60b116100595780633ccfd60b146101235780637bea0d1c146101385780638da5cb5b1461015a578063c243fb4914610192578063dfca959f146101a857600080fd5b80630bbeb8661461008b578063163de5e5146100ad5780631e4de872146100d65780633442fafa14610103575b600080fd5b34801561009757600080fd5b506100ab6100a6366004610bba565b6101bb565b005b3480156100b957600080fd5b506100c360025481565b6040519081526020015b60405180910390f35b3480156100e257600080fd5b506100f66100f1366004610c4c565b6102c5565b6040516100cd9190610cb5565b34801561010f57600080fd5b506100ab61011e366004610c4c565b6104f4565b34801561012f57600080fd5b506100ab6105a8565b34801561014457600080fd5b5061014d61060f565b6040516100cd9190610d2e565b34801561016657600080fd5b5060005461017a906001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b34801561019e57600080fd5b506100c360015481565b6100ab6101b6366004610de0565b6107c3565b6040805160a0810182528581526020810185905290810183905260608101829052600180546080830152600380549182018155600052815182916005027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019081906102279082610eb0565b5060208201516001820155604082015160028201906102469082610eb0565b506060820151600382019061025b9082610eb0565b506080820151816004015550507f95a8a800b05c316965e814cfd44fcc1c494efc73b62e45728c378fd3ac71db61858585856001546040516102a1959493929190610f70565b60405180910390a1600180549060006102b983610fc2565b91905055505050505050565b6102f76040518060a0016040528060608152602001600081526020016060815260200160608152602001600081525090565b6003828154811061030a5761030a610fe9565b90600052602060002090600502016040518060a001604052908160008201805461033390610e27565b80601f016020809104026020016040519081016040528092919081815260200182805461035f90610e27565b80156103ac5780601f10610381576101008083540402835291602001916103ac565b820191906000526020600020905b81548152906001019060200180831161038f57829003601f168201915b50505050508152602001600182015481526020016002820180546103cf90610e27565b80601f01602080910402602001604051908101604052809291908181526020018280546103fb90610e27565b80156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b5050505050815260200160038201805461046190610e27565b80601f016020809104026020016040519081016040528092919081815260200182805461048d90610e27565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b505050505081526020016004820154815250509050919050565b6000546001600160a01b031633146105275760405162461bcd60e51b815260040161051e90610fff565b60405180910390fd5b600454811061056e5760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840dee4c8cae440d2dcc8caf606b1b604482015260640161051e565b60016004828154811061058357610583610fe9565b60009182526020909120600490910201600201805460ff191691151591909117905550565b6000546001600160a01b031633146105d25760405162461bcd60e51b815260040161051e90610fff565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f1935050505015801561060c573d6000803e3d6000fd5b50565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156107ba57838290600052602060002090600402016040518060a001604052908160008201805461066690610e27565b80601f016020809104026020016040519081016040528092919081815260200182805461069290610e27565b80156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b505050918352505060018201546020820152600282015460ff81161515604083015261010090046001600160a01b0316606082015260038201805460809092019161072990610e27565b80601f016020809104026020016040519081016040528092919081815260200182805461075590610e27565b80156107a25780601f10610777576101008083540402835291602001916107a2565b820191906000526020600020905b81548152906001019060200180831161078557829003601f168201915b50505050508152505081526020019060010190610633565b50505050905090565b60035482106108095760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840ccdedec840d2dcc8caf60731b604482015260640161051e565b6003828154811061081c5761081c610fe9565b9060005260206000209060050201600101543410156108725760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b604482015260640161051e565b604080516000815260208101808352815190209161089291849101611044565b60405160208183030381529060405280519060200120036108ed5760405162461bcd60e51b8152602060048201526015602482015274506c6561736520656e7465722061207461626c652160581b604482015260640161051e565b60006040518060a001604052806003858154811061090d5761090d610fe9565b9060005260206000209060050201600001805461092990610e27565b80601f016020809104026020016040519081016040528092919081815260200182805461095590610e27565b80156109a25780601f10610977576101008083540402835291602001916109a2565b820191906000526020600020905b81548152906001019060200180831161098557829003601f168201915b50505050508152602001600385815481106109bf576109bf610fe9565b600091825260208083206001600590930201820154845283018290523360408401526060909201859052600480549283018155908190528251929350839291027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01908190610a2e9082610eb0565b5060208201516001820155604082015160028201805460608501516001600160a01b031661010002610100600160a81b0319931515939093166001600160a81b03199091161791909117905560808201516003820190610a8e9082610eb0565b505050336001600160a01b03167f4387a43b973e49ad9e029dcf0b0d3a666017065259bf6dfc80d332d8e9e46dea60038581548110610acf57610acf610fe9565b90600052602060002090600502016000014285600254604051610af59493929190611060565b60405180910390a260028054906000610b0d83610fc2565b9190505550505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b3e57600080fd5b813567ffffffffffffffff80821115610b5957610b59610b17565b604051601f8301601f19908116603f01168101908282118183101715610b8157610b81610b17565b81604052838152866020858801011115610b9a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610bd057600080fd5b843567ffffffffffffffff80821115610be857600080fd5b610bf488838901610b2d565b9550602087013594506040870135915080821115610c1157600080fd5b610c1d88838901610b2d565b93506060870135915080821115610c3357600080fd5b50610c4087828801610b2d565b91505092959194509250565b600060208284031215610c5e57600080fd5b5035919050565b60005b83811015610c80578181015183820152602001610c68565b50506000910152565b60008151808452610ca1816020860160208601610c65565b601f01601f19169290920160200192915050565b602081526000825160a06020840152610cd160c0840182610c89565b9050602084015160408401526040840151601f1980858403016060860152610cf98383610c89565b9250606086015191508085840301608086015250610d178282610c89565b915050608084015160a08401528091505092915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610dd257603f19898403018552815160a08151818652610d7b82870182610c89565b838b0151878c01528984015115158a8801526060808501516001600160a01b031690880152608093840151878203948801949094529150610dbe90508183610c89565b968901969450505090860190600101610d55565b509098975050505050505050565b60008060408385031215610df357600080fd5b82359150602083013567ffffffffffffffff811115610e1157600080fd5b610e1d85828601610b2d565b9150509250929050565b600181811c90821680610e3b57607f821691505b602082108103610e5b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610eab57600081815260208120601f850160051c81016020861015610e885750805b601f850160051c820191505b81811015610ea757828155600101610e94565b5050505b505050565b815167ffffffffffffffff811115610eca57610eca610b17565b610ede81610ed88454610e27565b84610e61565b602080601f831160018114610f135760008415610efb5750858301515b600019600386901b1c1916600185901b178555610ea7565b600085815260208120601f198616915b82811015610f4257888601518255948401946001909101908401610f23565b5085821015610f605787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60a081526000610f8360a0830188610c89565b8660208401528281036040840152610f9b8187610c89565b90508281036060840152610faf8186610c89565b9150508260808301529695505050505050565b600060018201610fe257634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b60208082526025908201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b60008251611056818460208701610c65565b9190910192915050565b60808152600080865461107281610e27565b80608086015260a060018084166000811461109457600181146110ae576110df565b60ff1985168884015283151560051b8801830195506110df565b8b60005260208060002060005b868110156110d65781548b82018701529084019082016110bb565b8a018501975050505b505050505085602084015282810360408401526110fc8186610c89565b9150508260608301529594505050505056fea26469706673582212207544c3b488bce0fb750e8092c593890c4e2150eb8d902d7c62b90f65b2e38f0b64736f6c63430008110033",
  "devdoc": {
    "author": "BuidlGuidl",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A smart contract that allows changing a state variable of the contract and tracking the changes It also allows the owner to withdraw the Ether in the contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/YourContract.sol:web3Food",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7,
        "contract": "contracts/YourContract.sol:web3Food",
        "label": "maxFood",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 10,
        "contract": "contracts/YourContract.sol:web3Food",
        "label": "orderId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 82,
        "contract": "contracts/YourContract.sol:web3Food",
        "label": "foods",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(food)55_storage)dyn_storage"
      },
      {
        "astId": 86,
        "contract": "contracts/YourContract.sol:web3Food",
        "label": "orders",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(order)66_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(food)55_storage)dyn_storage": {
        "base": "t_struct(food)55_storage",
        "encoding": "dynamic_array",
        "label": "struct web3Food.food[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(order)66_storage)dyn_storage": {
        "base": "t_struct(order)66_storage",
        "encoding": "dynamic_array",
        "label": "struct web3Food.order[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(food)55_storage": {
        "encoding": "inplace",
        "label": "struct web3Food.food",
        "members": [
          {
            "astId": 46,
            "contract": "contracts/YourContract.sol:web3Food",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 48,
            "contract": "contracts/YourContract.sol:web3Food",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 50,
            "contract": "contracts/YourContract.sol:web3Food",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 52,
            "contract": "contracts/YourContract.sol:web3Food",
            "label": "image",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 54,
            "contract": "contracts/YourContract.sol:web3Food",
            "label": "foodId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(order)66_storage": {
        "encoding": "inplace",
        "label": "struct web3Food.order",
        "members": [
          {
            "astId": 57,
            "contract": "contracts/YourContract.sol:web3Food",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 59,
            "contract": "contracts/YourContract.sol:web3Food",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 61,
            "contract": "contracts/YourContract.sol:web3Food",
            "label": "isPrepared",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 63,
            "contract": "contracts/YourContract.sol:web3Food",
            "label": "buyer",
            "offset": 1,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 65,
            "contract": "contracts/YourContract.sol:web3Food",
            "label": "tableId",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}